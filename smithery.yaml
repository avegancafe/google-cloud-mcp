# Smithery.ai configuration
startCommand:
  type: stdio
  configSchema:
    # JSON Schema defining the configuration options for the MCP
    type: object
    properties:
      projectId:
        type: string
        description: "Google Cloud Project ID (optional)"
      credentials:
        oneOf:
          - type: object
            properties:
              clientEmail:
                type: string
                description: "Google Cloud service account client email"
              privateKey:
                type: string
                description: "Google Cloud service account private key"
            required: ["clientEmail", "privateKey"]
            description: "Google Cloud service account credentials as environment variables"
          - type: object
            properties:
              keyFilePath:
                type: string
                description: "Path to Google Cloud service account key file (JSON)"
            required: ["keyFilePath"]
            description: "Google Cloud service account credentials as a key file"
        description: "Google Cloud service account credentials (optional)"
    additionalProperties: false
  commandFunction:
    # A function that produces the CLI command to start the MCP on stdio
    |-
    (config) => {
      const env = {};
      
      // Add Google Cloud project ID if provided
      if (config.projectId) {
        env.GOOGLE_CLOUD_PROJECT = config.projectId;
      }
      
      // Add Google Cloud credentials if provided
      if (config.credentials) {
        // Method 1: Using client email and private key directly
        if (config.credentials.clientEmail && config.credentials.privateKey) {
          env.GOOGLE_CLIENT_EMAIL = config.credentials.clientEmail;
          env.GOOGLE_PRIVATE_KEY = config.credentials.privateKey;
        }
        
        // Method 2: Using a key file (standard approach)
        if (config.credentials.keyFilePath) {
          env.GOOGLE_APPLICATION_CREDENTIALS = config.credentials.keyFilePath;
        }
      }
      
      return {
        "command": "node",
        "args": [
          "dist/index.js"
        ],
        "env": env
      };
    }
